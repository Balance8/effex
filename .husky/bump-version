STAGED_PACKAGE_JSONS=$(git diff --cached --name-only --diff-filter=ACM | grep 'package\.json$' | grep -v '^package\.json$' || true)

if [ -n "$STAGED_PACKAGE_JSONS" ]; then
  for PACKAGE_JSON in $STAGED_PACKAGE_JSONS; do
    if [ ! -f "$PACKAGE_JSON" ]; then
      continue
    fi

    if git rev-parse --verify HEAD >/dev/null 2>&1; then
      OLD_VERSION=$(git show HEAD:"$PACKAGE_JSON" 2>/dev/null | grep '"version"' | head -1 | sed 's/.*"version": "\(.*\)".*/\1/' || echo "")
    else
      OLD_VERSION=""
    fi

    CURRENT_VERSION=$(grep '"version"' "$PACKAGE_JSON" 2>/dev/null | head -1 | sed 's/.*"version": "\(.*\)".*/\1/' || echo "")

    if [ -n "$OLD_VERSION" ] && [ -n "$CURRENT_VERSION" ] && [ "$OLD_VERSION" = "$CURRENT_VERSION" ]; then
      IFS='.' read -r MAJOR MINOR PATCH <<EOF
$CURRENT_VERSION
EOF

      NEW_PATCH=$((PATCH + 1))
      NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

      if [ "$(uname)" = "Darwin" ]; then
        sed -i '' "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" "$PACKAGE_JSON" 2>/dev/null || true
      else
        sed -i "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" "$PACKAGE_JSON" 2>/dev/null || true
      fi

      git add "$PACKAGE_JSON" 2>/dev/null || true
    fi
  done
fi

